// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using template_csharp_blog;

#nullable disable

namespace template_csharp_blog.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20220628152843_te")]
    partial class te
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("template_csharp_blog.Models.Catagory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CatagoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CatagoryId");

                    b.HasIndex("PostId");

                    b.ToTable("Catagories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pets"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hobbies"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Family"
                        });
                });

            modelBuilder.Entity("template_csharp_blog.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2022, 6, 28, 11, 28, 43, 537, DateTimeKind.Local).AddTicks(3798),
                            Name = "Dina",
                            Title = "The high pitch scream"
                        });
                });

            modelBuilder.Entity("template_csharp_blog.Models.Catagory", b =>
                {
                    b.HasOne("template_csharp_blog.Models.Catagory", null)
                        .WithMany("Catagories")
                        .HasForeignKey("CatagoryId");

                    b.HasOne("template_csharp_blog.Models.Post", null)
                        .WithMany("Catagories")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("template_csharp_blog.Models.Catagory", b =>
                {
                    b.Navigation("Catagories");
                });

            modelBuilder.Entity("template_csharp_blog.Models.Post", b =>
                {
                    b.Navigation("Catagories");
                });
#pragma warning restore 612, 618
        }
    }
}
